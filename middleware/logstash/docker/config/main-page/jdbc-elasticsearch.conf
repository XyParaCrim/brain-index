input {
  jdbc {
    jdbc_connection_string => "${JDBC_CONNECT_STRING}"
    jdbc_user => "${JDBC_USER}"
    jdbc_password => "${JDBC_PASSWORD}"
    jdbc_driver_library => "${LOGSTASH_HOME}/lib/mysql-connector-java/mysql-connector-java-5.1.48-bin.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_paging_enabled => true
    jdbc_page_size => "50000"

    schedule => "0 */5 * * * *"

    statement_filepath => "${LOGSTASH_CONFIG}/main-page/jdbc-input.sql"

    # 同步点文件，这个文件记录了上次的同步点，重启时会读取这个文件，这个文件可以手动修改
    last_run_metadata_path => "${LOGSTASH_LAST_RUN}/main-page"
  }
}
filter {
  jdbc_static {
    loaders => [
      {
        id => "wm_mainpage_area_info"
        query => "select id, main_page_id, area_type, area_info_name_low from wm_mainpage_area_info"
        local_table => "mainpage_area_info"
      },
      {
        id => "wm_ext_mp_fund_status"
        query => "select id, main_page_id, round from wm_ext_mp_fund_status"
        local_table => "ext_mp_fund_status"
      },
      {
        id => "wm_main_page_dtl"
        query => "select id, main_page_id, address from wm_main_page_dtl"
        local_table => "main_page_dtl"
      },
      {
        id => "wm_ext_mp_ref_object"
        query => "select id, main_page_id, name from wm_ext_mp_ref_object"
        local_table => "ext_mp_ref_object"
      },
      {
        id => "wm_user_follow"
        query => "select id, status, domain_id, user_id, object_id, object_type, acct_id from wm_user_follow where acct_id is not null"
        local_table => "follow"
      },
      {
        id => "wm_user_domain_relation"
        query => "select * from wm_user_domain_relation where from_domain_id is not null"
        local_table => "user_domain_relation"
      }
    ]

    local_db_objects => [
      {
        name => "mainpage_area_info"
        index_columns => ["id"]
        columns => [
          ["id", "bigint"],
          ["main_page_id", "bigint"],
          ["area_type", "varchar(30)"],
          ["area_info_name_low", "varchar(50)"]
        ]
        preserve_existing => true
      },
      {
        name => "ext_mp_fund_status"
        index_columns => ["id"]
        columns => [
          ["id", "bigint"],
          ["main_page_id", "bigint"],
          ["round", "varchar(30)"]
        ]
        preserve_existing => true
      },
      {
        name => "main_page_dtl"
        index_columns => ["id"]
        columns => [
          ["id", "bigint"],
          ["main_page_id", "bigint"],
          ["address", "varchar(200)"]
        ]
        preserve_existing => true
      },
      {
        name => "ext_mp_ref_object"
        index_columns => ["id"]
        columns => [
          ["id", "bigint"],
          ["main_page_id", "bigint"],
          ["name", "varchar(150)"]
        ]
        preserve_existing => true
      },
      {
        name => "follow"
        index_columns => ["id"]
        columns => [
          ["id", "bigint"],
          ["status", "varchar(10)"],
          ["domain_id", "varchar(50)"],
          ["user_id", "bigint"],
          ["object_id", "varchar(50)"],
          ["object_type", "varchar(30)"],
          ["acct_id", "bigint"]
        ]
        preserve_existing => true
      },
      {
        name => "user_domain_relation"
        index_columns => ["user_id", "domain_id"]
        columns => [
          ["user_id", "bigint"],
          ["domain_id", "varchar(50)"],
          ["status", "varchar(10)"],
          ["from_domain_id", "varchar(50)"]
        ]
        preserve_existing => true
      }
    ]

    local_lookups => [
      {
        id => "local_mainpage_area_info"
        target => "mainpage_area_info"
        query => "select area_type, area_info_name_low from mainpage_area_info where main_page_id=:id"
        parameters => { "id" => "[id]" }
      },
      {
        id => "local_ext_mp_fund_status"
        target => "ext_mp_fund_status"
        query => "select round from ext_mp_fund_status where main_page_id=:id"
        parameters => { "id" => "[id]" }
      },
      {
        id => "local_main_page_dtl"
        target => "main_page_dtl"
        query => "select address from main_page_dtl where main_page_id=:id"
        parameters => { "id" => "[id]" }
      },
      {
        id => "local_ext_mp_ref_object"
        target => "ext_mp_ref_object"
        query => "select name from ext_mp_ref_object where main_page_id=:id"
        parameters => { "id" => "[id]" }
      },
      {
        id => "local_follow"
        target => "follow"
        query => "select acct_id from follow where object_id=:id"
        parameters => { "id" => "[id]" }
      },
      {
        id => "local_user_domain_relation"
        target => "user_domain_relation"
        query => "select domain_id, status, from_domain_id from user_domain_relation where from_domain_id=:domain_id"
        parameters => { "domain_id" => "[domain_id]"}
      }
    ]

    loader_schedule => "0 * * * *"

    # jdbc connect message
    jdbc_connection_string => "${JDBC_CONNECT_STRING}"
    jdbc_user => "${JDBC_USER}"
    jdbc_password => "${JDBC_PASSWORD}"
    jdbc_driver_library => "${LOGSTASH_HOME}/lib/mysql-connector-java/mysql-connector-java-5.1.48-bin.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"

    staging_directory => "${LOGSTASH_HOME}/data/tmp/logstash/jdbc_static/import_data"
  }

  mutate {
    add_field => {
      "[@metadata][mode]" => "${LOGSTASH_RUN_MODE:prod}"
      "[@metadata][index]" => "main-page"
      "[@metadata][type]" => "config"
    }
  }
}
output {
 if [@metadata][mode] == "debug" {
   stdout { }
 }

 if [@metadata][mode] == "prod" {
    elasticsearch {
      hosts => "${ELASTICSEARCH_HOST}"
      index => "mysql-%{[@metadata][type]}-%{[@metadata][index]}"
      document_id => "%{id}"
      pool_max => 100
      pool_max_per_route => 10
      template => "${LOGSTASH_CONFIG}/main-page/elasticsearch-template.json"
      template_name => "mysql-config-main-page"
      template_overwrite => true
    }
  }
}